version: 0.2

phases:
  pre_build:
    commands:
      - echo Activating venv...
      - . /venv/bin/activate
      - echo Installing dependencies...
      - pip install -r requirements.txt
      - FLASK_APP=hello
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 773867802764.dkr.ecr.us-west-2.amazonaws.com
      - REPOSITORY_URI=773867802764.dkr.ecr.us-west-2.amazonaws.com/home-project
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG_HAPP=home-project-build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#      - IMAGE_TAG_NGINX=custom-nginx-build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - IMAGE_TAG_HAPP_LATEST=home-project-build-latest
#      - IMAGE_TAG_NGINX_LATEST=custom-nginx-build-latest

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest -f ./Dockerfile .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG_HAPP
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG_HAPP_LATEST
#      - docker build -t $REPOSITORY_URI:latest -f ./NGINX/Dockerfile .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG_NGINX
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG_NGINX_LATEST

  post_build:
    commands:
      - echo removing last latest tagged images
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG_HAPP
      - docker push $REPOSITORY_URI:$IMAGE_TAG_HAPP_LATEST